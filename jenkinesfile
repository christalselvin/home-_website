pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'flask-app'
        DOCKER_REGISTRY = 'christalselvin'
        IMAGE_TAG = "${env.BUILD_ID}"
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout your code from the repository
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image using Dockerfile in the repository
                    sh 'docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${IMAGE_TAG} .'
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Run unit tests or integration tests (replace with your test commands)
                    sh 'docker run --rm ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${IMAGE_TAG} python -m unittest discover'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Push the Docker image to Docker Hub (replace with your credentials if needed)
                    sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                    sh 'docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${IMAGE_TAG}'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Deploy the Docker container (replace with your deployment process)
                    sh 'docker run -d -p 5000:5000 ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${IMAGE_TAG}'
                }
            }
        }
    }

    post {
        always {
            // Clean up Docker images after the build process
            sh 'docker system prune -af'
        }
    }
}

